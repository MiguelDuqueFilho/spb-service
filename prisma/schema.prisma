generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model MessageSend {
  id              String    @id
  originId        String
  msgId           Int //  @db.Integer //* identificador único (SPBx/OBE) da mensagem enviada.
  nuOp            String // @db.Char(23) //* identificador único da transação no SPB/RSFN.
  codMsg          String //* código da mensagem.
  ispbEmissor     String //* código ISPB da instituição emissora.
  ispbDestino     String //* código ISPB da instituição financeira para a qual se deseja enviar a mensagem.
  prioridade      Int? //* PRIORIDADE_BAIXA = 0 - PRIORIDADE_NORMAL = 1 (default) - PRIORIDADE_ALTA = 2
  tipoAgendamento String? //* AGENDAMENTO_SEM_REPETICAO = 0 (default – 1 única vez) - AGENDAMENTO_OPERACAO_BACEN = 1 - AGENDAMENTO_COM_REPETICAO = 2 (repetição diária)
  dataAgendamento String? //* no formato dd/mm/aaaa.
  horaAgendamento String? //* no formato hh:mm.) da mensagem a ser removida.
  msgXml          String // @db.Xml //*  conteúdo da mensagem.
  statusMsg       Int // @db.Integer //* o método retornará CM_OK se houver sucesso. Em caso de erro, retornará um dos erros CMErros definidos neste documento.
  sentAt          DateTime?
  canceledAt      DateTime?
  createdAt       DateTime  @default(now())

  @@index([msgId])
}

model MessageReceive {
  id              String   @id
  mqId            String //* identificador de fila (MQSeries/RSFN) da mensagem.
  msgId           Int //  @db.Integer //* identificador único (SPBx/OBE) da mensagem enviada.
  nuOp            String // @db.Char(23) //* identificador único da transação no SPB/RSFN.
  codMsg          String //* código da mensagem.
  ispbEmissor     String //* código ISPB da instituição emissora.
  ispbDestino     String //* código ISPB da instituição financeira para a qual se deseja enviar a mensagem.
  dataRecebimento String //* data do recebimento da mensagem, no formato dd/mm/aaaa.
  horaRecebimento String //* hora do recebimento da mensagem, no formato hh:mm:ss.
  msgXml          String // @db.Xml //*  conteúdo da mensagem.
  statusMsg       Int //* o método retornará CM_OK se houver sucesso. Em caso de erro, retornará um dos erros CMErros definidos neste documento.
  receivedAt      DateTime
  createdAt       DateTime @default(now())

  @@index([msgId])
}
